[gd_scene load_steps=7 format=3 uid="uid://cs72nn5bw7afl"]

[ext_resource type="Script" path="res://Scripts/NpcCoffee.cs" id="1_gp5hm"]
[ext_resource type="Texture2D" uid="uid://b0l7l4d162hqe" path="res://icon.svg" id="2_uu70k"]

[sub_resource type="CircleShape2D" id="CircleShape2D_pc2fo"]
radius = 33.01

[sub_resource type="Shader" id="Shader_ryhur"]
code = "shader_type canvas_item;

uniform vec4 color : source_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a <= 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0t5h6"]
resource_local_to_scene = true
shader = SubResource("Shader_ryhur")
shader_parameter/color = Color(0.996078, 1, 0.541176, 0.764706)
shader_parameter/width = 0.0
shader_parameter/pattern = 1
shader_parameter/inside = false
shader_parameter/add_margins = true

[sub_resource type="CircleShape2D" id="CircleShape2D_1psf3"]
radius = 45.62

[node name="NpcCoffee" type="CharacterBody2D"]
modulate = Color(1, 1, 0.423529, 1)
script = ExtResource("1_gp5hm")
PlayerBounceValue = 900.0
NpcBounceValue = 500.0
MinPointDistance = 20.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0.5, -1)
shape = SubResource("CircleShape2D_pc2fo")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_0t5h6")
scale = Vector2(0.5, 0.5)
texture = ExtResource("2_uu70k")

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="."]
avoidance_enabled = true
radius = 33.0
neighbor_distance = 1676.47
max_neighbors = 40

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource("CircleShape2D_1psf3")

[connection signal="body_entered" from="Area2D" to="." method="OnBodyEntered"]
